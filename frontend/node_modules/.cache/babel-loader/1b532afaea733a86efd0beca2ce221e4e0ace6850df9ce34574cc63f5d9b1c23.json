{"ast":null,"code":"var _jsxFileName = \"/Users/pcompany/Desktop/Sem_VII/ET/AgriDost/frontend/src/components/GraphComponent.js\";\nimport React from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GraphComponent = ({\n  farmData\n}) => {\n  // Check if farmData is available and is an array before attempting to map\n  if (!Array.isArray(farmData) || farmData.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading graph data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Process data for the graph\n  const timestamps = farmData.map(data => new Date(data.timestamp).toLocaleTimeString());\n  const temperatures = farmData.map(data => data.temperature);\n  const soilMoistures = farmData.map(data => data.soilMoisture);\n  const humidities = farmData.map(data => data.humidity);\n  const data = {\n    labels: timestamps,\n    datasets: [{\n      label: 'Temperature (°C)',\n      data: temperatures,\n      borderColor: 'rgb(255, 99, 132)',\n      backgroundColor: 'rgba(255, 99, 132, 0.2)'\n    }, {\n      label: 'Soil Moisture (%)',\n      data: soilMoistures,\n      borderColor: 'rgb(54, 162, 235)',\n      backgroundColor: 'rgba(54, 162, 235, 0.2)'\n    }, {\n      label: 'Humidity (%)',\n      data: humidities,\n      borderColor: 'rgb(75, 192, 192)',\n      backgroundColor: 'rgba(75, 192, 192, 0.2)'\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Farm Data Over Time\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Line, {\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_c = GraphComponent;\nexport default GraphComponent;\nvar _c;\n$RefreshReg$(_c, \"GraphComponent\");","map":{"version":3,"names":["React","Line","jsxDEV","_jsxDEV","GraphComponent","farmData","Array","isArray","length","children","fileName","_jsxFileName","lineNumber","columnNumber","timestamps","map","data","Date","timestamp","toLocaleTimeString","temperatures","temperature","soilMoistures","soilMoisture","humidities","humidity","labels","datasets","label","borderColor","backgroundColor","_c","$RefreshReg$"],"sources":["/Users/pcompany/Desktop/Sem_VII/ET/AgriDost/frontend/src/components/GraphComponent.js"],"sourcesContent":["import React from 'react';\nimport { Line } from 'react-chartjs-2';\n\nconst GraphComponent = ({ farmData }) => {\n  // Check if farmData is available and is an array before attempting to map\n  if (!Array.isArray(farmData) || farmData.length === 0) {\n    return <p>Loading graph data...</p>;\n  }\n\n  // Process data for the graph\n  const timestamps = farmData.map(data => new Date(data.timestamp).toLocaleTimeString());\n  const temperatures = farmData.map(data => data.temperature);\n  const soilMoistures = farmData.map(data => data.soilMoisture);\n  const humidities = farmData.map(data => data.humidity);\n\n  const data = {\n    labels: timestamps,\n    datasets: [\n      {\n        label: 'Temperature (°C)',\n        data: temperatures,\n        borderColor: 'rgb(255, 99, 132)',\n        backgroundColor: 'rgba(255, 99, 132, 0.2)',\n      },\n      {\n        label: 'Soil Moisture (%)',\n        data: soilMoistures,\n        borderColor: 'rgb(54, 162, 235)',\n        backgroundColor: 'rgba(54, 162, 235, 0.2)',\n      },\n      {\n        label: 'Humidity (%)',\n        data: humidities,\n        borderColor: 'rgb(75, 192, 192)',\n        backgroundColor: 'rgba(75, 192, 192, 0.2)',\n      },\n    ],\n  };\n\n  return (\n    <div>\n      <h3>Farm Data Over Time</h3>\n      <Line data={data} />\n    </div>\n  );\n};\n\nexport default GraphComponent;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,cAAc,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EACvC;EACA,IAAI,CAACC,KAAK,CAACC,OAAO,CAACF,QAAQ,CAAC,IAAIA,QAAQ,CAACG,MAAM,KAAK,CAAC,EAAE;IACrD,oBAAOL,OAAA;MAAAM,QAAA,EAAG;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EACrC;;EAEA;EACA,MAAMC,UAAU,GAAGT,QAAQ,CAACU,GAAG,CAACC,IAAI,IAAI,IAAIC,IAAI,CAACD,IAAI,CAACE,SAAS,CAAC,CAACC,kBAAkB,CAAC,CAAC,CAAC;EACtF,MAAMC,YAAY,GAAGf,QAAQ,CAACU,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACK,WAAW,CAAC;EAC3D,MAAMC,aAAa,GAAGjB,QAAQ,CAACU,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACO,YAAY,CAAC;EAC7D,MAAMC,UAAU,GAAGnB,QAAQ,CAACU,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACS,QAAQ,CAAC;EAEtD,MAAMT,IAAI,GAAG;IACXU,MAAM,EAAEZ,UAAU;IAClBa,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,kBAAkB;MACzBZ,IAAI,EAAEI,YAAY;MAClBS,WAAW,EAAE,mBAAmB;MAChCC,eAAe,EAAE;IACnB,CAAC,EACD;MACEF,KAAK,EAAE,mBAAmB;MAC1BZ,IAAI,EAAEM,aAAa;MACnBO,WAAW,EAAE,mBAAmB;MAChCC,eAAe,EAAE;IACnB,CAAC,EACD;MACEF,KAAK,EAAE,cAAc;MACrBZ,IAAI,EAAEQ,UAAU;MAChBK,WAAW,EAAE,mBAAmB;MAChCC,eAAe,EAAE;IACnB,CAAC;EAEL,CAAC;EAED,oBACE3B,OAAA;IAAAM,QAAA,gBACEN,OAAA;MAAAM,QAAA,EAAI;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5BV,OAAA,CAACF,IAAI;MAACe,IAAI,EAAEA;IAAK;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjB,CAAC;AAEV,CAAC;AAACkB,EAAA,GA1CI3B,cAAc;AA4CpB,eAAeA,cAAc;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
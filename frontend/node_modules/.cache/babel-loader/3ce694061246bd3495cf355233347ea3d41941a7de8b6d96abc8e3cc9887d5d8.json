{"ast":null,"code":"var _jsxFileName = \"/Users/pcompany/Desktop/Sem_VII/ET/AgriDost/frontend/src/components/FarmDashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\nimport './FarmDashboard.css'; // Import CSS for styling\n\n// Register Chart.js components\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nconst FarmDashboard = () => {\n  _s();\n  const [farmData, setFarmData] = useState(null);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [username, setUsername] = useState('Ansh Patel'); // Default username\n\n  // Latest data state for each sensor\n  const [latestTemperature, setLatestTemperature] = useState(null);\n  const [latestSoilMoisture, setLatestSoilMoisture] = useState(null);\n  const [latestHumidity, setLatestHumidity] = useState(null);\n  const [latestMotionDetected, setLatestMotionDetected] = useState(null);\n  useEffect(() => {\n    const token = localStorage.getItem('token'); // Retrieve the token from localStorage\n    const userId = localStorage.getItem('userId'); // Retrieve the userId from localStorage\n    const storedUsername = localStorage.getItem('username');\n    if (token && userId) {\n      setIsLoggedIn(true);\n      setUsername(storedUsername || 'Ansh Patel'); // Set the username if available\n    } else {\n      // If no token or userId exists, simulate a default user\n      localStorage.setItem('token', 'default-token'); // Set a default token\n      localStorage.setItem('username', 'Ansh Patel');\n      localStorage.setItem('userId', 'default-user-id'); // Set a default user ID\n      setIsLoggedIn(true);\n      setUsername('Ansh Patel');\n    }\n    const fetchFarmData = async () => {\n      try {\n        if (!token || !userId) {\n          console.error('No token or userId found');\n          return;\n        }\n\n        // Validate that userId is a proper MongoDB ObjectId (24 hex characters)\n        if (userId.length !== 24) {\n          console.error('Invalid User ID format');\n          return;\n        }\n        const response = await axios.get(`/api/farm/${userId}`, {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        const data = response.data;\n        setFarmData(data);\n\n        // Debugging: Log the fetched data\n        console.log('Fetched Farm Data:', data);\n\n        // Set latest sensor data\n        if (Array.isArray(data) && data.length > 0) {\n          const latestData = data[data.length - 1]; // Assume last item is the latest\n          setLatestTemperature(latestData.temperature);\n          setLatestSoilMoisture(latestData.soilMoisture);\n          setLatestHumidity(latestData.humidity);\n          setLatestMotionDetected(latestData.motionDetected);\n          console.log('Latest Data:', latestData);\n        }\n      } catch (error) {\n        console.error('Error fetching farm data', error);\n      }\n    };\n    fetchFarmData();\n\n    // Set interval to fetch the latest data every minute (60000ms)\n    const interval = setInterval(fetchFarmData, 60000);\n    return () => clearInterval(interval); // Clean up interval on component unmount\n  }, []);\n\n  // Filter last 2 days of data\n  const getLastTwoDaysData = () => {\n    if (!farmData || !Array.isArray(farmData)) return [];\n    const twoDaysAgo = new Date();\n    twoDaysAgo.setDate(twoDaysAgo.getDate() - 2); // Get date two days ago\n\n    return farmData.filter(data => new Date(data.timestamp) >= twoDaysAgo);\n  };\n  const filteredData = getLastTwoDaysData();\n\n  // Prepare data for the graph\n  const chartData = {\n    labels: filteredData.map(data => new Date(data.timestamp).toLocaleString()),\n    // X-axis labels as timestamps\n    datasets: [{\n      label: 'Temperature (Â°C)',\n      data: filteredData.map(data => data.temperature),\n      // Y-axis temperature values\n      borderColor: 'rgba(255, 99, 132, 1)',\n      backgroundColor: 'rgba(255, 99, 132, 0.2)',\n      fill: true,\n      tension: 0.4\n    }, {\n      label: 'Soil Moisture (%)',\n      data: filteredData.map(data => data.soilMoisture),\n      borderColor: 'rgba(54, 162, 235, 1)',\n      backgroundColor: 'rgba(54, 162, 235, 0.2)',\n      fill: true,\n      tension: 0.4\n    }, {\n      label: 'Humidity (%)',\n      data: filteredData.map(data => data.humidity),\n      borderColor: 'rgba(75, 192, 192, 1)',\n      backgroundColor: 'rgba(75, 192, 192, 0.2)',\n      fill: true,\n      tension: 0.4\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"navbar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"navbar-left\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/images/logo.png\",\n          alt: \"Logo\",\n          className: \"navbar-logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"navbar-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/\",\n            children: \"About Us\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/\",\n            children: \"Sensors\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/farm-dashboard\",\n            children: \"Farm Data\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"navbar-right\",\n        children: isLoggedIn ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"navbar-username\",\n            children: username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 15\n          }, this), \" \"]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"graph-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Sensor Data (Past 2 Days)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        data: chartData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"raw-data-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Farm Data Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: farmData ? Array.isArray(farmData) ? farmData.map((data, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Date:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 19\n          }, this), \" \", new Date(data.timestamp).toLocaleString(), \" |\", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \" Temperature:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 19\n          }, this), \" \", data.temperature, \" \\xB0C |\", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \" Soil Moisture:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 19\n          }, this), \" \", data.soilMoisture, \" % |\", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \" Humidity:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 19\n          }, this), \" \", data.humidity, \" % |\", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \" Motion Detected:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 19\n          }, this), \" \", data.motionDetected ? 'Yes' : 'No']\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 17\n        }, this)) : /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Date:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 17\n          }, this), \" \", new Date(farmData.timestamp).toLocaleString(), \" |\", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \" Temperature:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 17\n          }, this), \" \", farmData.temperature, \" \\xB0C |\", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \" Soil Moisture:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 17\n          }, this), \" \", farmData.soilMoisture, \" % |\", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \" Humidity:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 17\n          }, this), \" \", farmData.humidity, \" % |\", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \" Motion Detected:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 17\n          }, this), \" \", farmData.motionDetected ? 'Yes' : 'No']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 5\n  }, this);\n};\n_s(FarmDashboard, \"e7/1iS7q4R7hv1HAio7d9yd5MCw=\");\n_c = FarmDashboard;\nexport default FarmDashboard;\nvar _c;\n$RefreshReg$(_c, \"FarmDashboard\");","map":{"version":3,"names":["React","useState","useEffect","axios","Link","Line","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","Fragment","_Fragment","register","FarmDashboard","_s","farmData","setFarmData","isLoggedIn","setIsLoggedIn","username","setUsername","latestTemperature","setLatestTemperature","latestSoilMoisture","setLatestSoilMoisture","latestHumidity","setLatestHumidity","latestMotionDetected","setLatestMotionDetected","token","localStorage","getItem","userId","storedUsername","setItem","fetchFarmData","console","error","length","response","get","headers","data","log","Array","isArray","latestData","temperature","soilMoisture","humidity","motionDetected","interval","setInterval","clearInterval","getLastTwoDaysData","twoDaysAgo","Date","setDate","getDate","filter","timestamp","filteredData","chartData","labels","map","toLocaleString","datasets","label","borderColor","backgroundColor","fill","tension","children","className","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","to","index","_c","$RefreshReg$"],"sources":["/Users/pcompany/Desktop/Sem_VII/ET/AgriDost/frontend/src/components/FarmDashboard.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\nimport './FarmDashboard.css'; // Import CSS for styling\n\n// Register Chart.js components\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\n\nconst FarmDashboard = () => {\n  const [farmData, setFarmData] = useState(null);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [username, setUsername] = useState('Ansh Patel'); // Default username\n\n  // Latest data state for each sensor\n  const [latestTemperature, setLatestTemperature] = useState(null);\n  const [latestSoilMoisture, setLatestSoilMoisture] = useState(null);\n  const [latestHumidity, setLatestHumidity] = useState(null);\n  const [latestMotionDetected, setLatestMotionDetected] = useState(null);\n\n  useEffect(() => {\n    const token = localStorage.getItem('token'); // Retrieve the token from localStorage\n    const userId = localStorage.getItem('userId'); // Retrieve the userId from localStorage\n    const storedUsername = localStorage.getItem('username');\n\n    if (token && userId) {\n      setIsLoggedIn(true);\n      setUsername(storedUsername || 'Ansh Patel'); // Set the username if available\n    } else {\n      // If no token or userId exists, simulate a default user\n      localStorage.setItem('token', 'default-token'); // Set a default token\n      localStorage.setItem('username', 'Ansh Patel');\n      localStorage.setItem('userId', 'default-user-id'); // Set a default user ID\n      setIsLoggedIn(true);\n      setUsername('Ansh Patel');\n    }\n\n    const fetchFarmData = async () => {\n      try {\n        if (!token || !userId) {\n          console.error('No token or userId found');\n          return;\n        }\n\n        // Validate that userId is a proper MongoDB ObjectId (24 hex characters)\n        if (userId.length !== 24) {\n          console.error('Invalid User ID format');\n          return;\n        }\n\n        const response = await axios.get(`/api/farm/${userId}`, {\n          headers: { 'Authorization': `Bearer ${token}` }\n        });\n\n        const data = response.data;\n        setFarmData(data);\n\n        // Debugging: Log the fetched data\n        console.log('Fetched Farm Data:', data);\n\n        // Set latest sensor data\n        if (Array.isArray(data) && data.length > 0) {\n          const latestData = data[data.length - 1]; // Assume last item is the latest\n          setLatestTemperature(latestData.temperature);\n          setLatestSoilMoisture(latestData.soilMoisture);\n          setLatestHumidity(latestData.humidity);\n          setLatestMotionDetected(latestData.motionDetected);\n\n          console.log('Latest Data:', latestData);\n        }\n      } catch (error) {\n        console.error('Error fetching farm data', error);\n      }\n    };\n\n    fetchFarmData();\n\n    // Set interval to fetch the latest data every minute (60000ms)\n    const interval = setInterval(fetchFarmData, 60000);\n\n    return () => clearInterval(interval); // Clean up interval on component unmount\n  }, []);\n\n  // Filter last 2 days of data\n  const getLastTwoDaysData = () => {\n    if (!farmData || !Array.isArray(farmData)) return [];\n\n    const twoDaysAgo = new Date();\n    twoDaysAgo.setDate(twoDaysAgo.getDate() - 2); // Get date two days ago\n\n    return farmData.filter(data => new Date(data.timestamp) >= twoDaysAgo);\n  };\n\n  const filteredData = getLastTwoDaysData();\n\n  // Prepare data for the graph\n  const chartData = {\n    labels: filteredData.map(data => new Date(data.timestamp).toLocaleString()), // X-axis labels as timestamps\n    datasets: [\n      {\n        label: 'Temperature (Â°C)',\n        data: filteredData.map(data => data.temperature), // Y-axis temperature values\n        borderColor: 'rgba(255, 99, 132, 1)',\n        backgroundColor: 'rgba(255, 99, 132, 0.2)',\n        fill: true,\n        tension: 0.4\n      },\n      {\n        label: 'Soil Moisture (%)',\n        data: filteredData.map(data => data.soilMoisture),\n        borderColor: 'rgba(54, 162, 235, 1)',\n        backgroundColor: 'rgba(54, 162, 235, 0.2)',\n        fill: true,\n        tension: 0.4\n      },\n      {\n        label: 'Humidity (%)',\n        data: filteredData.map(data => data.humidity),\n        borderColor: 'rgba(75, 192, 192, 1)',\n        backgroundColor: 'rgba(75, 192, 192, 0.2)',\n        fill: true,\n        tension: 0.4\n      }\n    ]\n  };\n\n  return (\n    <div>\n      {/* Navbar implementation */}\n      <nav className=\"navbar\">\n        <div className=\"navbar-left\">\n          <img src=\"/images/logo.png\" alt=\"Logo\" className=\"navbar-logo\" />\n        </div>\n        <ul className=\"navbar-center\">\n          <li><Link to=\"/\">About Us</Link></li>\n          <li><Link to=\"/\">Sensors</Link></li>\n          <li><Link to=\"/farm-dashboard\">Farm Data</Link></li> {/* Farm Data link */}\n        </ul>\n        <div className=\"navbar-right\">\n          {isLoggedIn ? (\n            <>\n              <span className=\"navbar-username\">{username}</span> {/* Display username */}\n            </>\n          ) : (\n            <></>\n          )}\n        </div>\n      </nav>\n\n      {/* Cards Section */}\n      {/* ...Existing card code here... */}\n\n      {/* Graph Section */}\n      <div className=\"graph-section\">\n        <h2>Sensor Data (Past 2 Days)</h2>\n        <Line data={chartData} />\n      </div>\n\n      {/* Table to display raw data */}\n      <div className=\"raw-data-table\">\n        <h2>Farm Data Dashboard</h2>\n        <ul>\n          {farmData ? (\n            Array.isArray(farmData) ? (\n              farmData.map((data, index) => (\n                <li key={index}>\n                  <strong>Date:</strong> {new Date(data.timestamp).toLocaleString()} | \n                  <strong> Temperature:</strong> {data.temperature} Â°C | \n                  <strong> Soil Moisture:</strong> {data.soilMoisture} % | \n                  <strong> Humidity:</strong> {data.humidity} % | \n                  <strong> Motion Detected:</strong> {data.motionDetected ? 'Yes' : 'No'}\n                </li>\n              ))\n            ) : (\n              <li>\n                <strong>Date:</strong> {new Date(farmData.timestamp).toLocaleString()} | \n                <strong> Temperature:</strong> {farmData.temperature} Â°C | \n                <strong> Soil Moisture:</strong> {farmData.soilMoisture} % | \n                <strong> Humidity:</strong> {farmData.humidity} % | \n                <strong> Motion Detected:</strong> {farmData.motionDetected ? 'Yes' : 'No'}\n              </li>\n            )\n          ) : (\n            <p>Loading...</p>\n          )}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default FarmDashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
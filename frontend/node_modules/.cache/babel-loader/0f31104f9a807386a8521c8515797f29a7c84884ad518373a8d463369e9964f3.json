{"ast":null,"code":"var _jsxFileName = \"/Users/pcompany/Desktop/Sem_VII/ET/AgriDost/frontend/src/components/FarmDataChart.js\",\n  _s = $RefreshSig$();\n// FarmDataChart.js\nimport React, { useEffect, useState } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, LineElement, CategoryScale, LinearScale, TimeScale, Title, Tooltip, Legend, PointElement } from 'chart.js';\nimport 'chartjs-adapter-date-fns'; // For handling time scales\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(LineElement, CategoryScale, LinearScale, TimeScale, Title, Tooltip, Legend, PointElement);\nconst FarmDataChart = () => {\n  _s();\n  const [chartData, setChartData] = useState({\n    datasets: []\n  });\n\n  // Function to fetch data from the backend API\n  const fetchChartData = async () => {\n    try {\n      const response = await fetch('/api/fetch-two-days-data'); // API endpoint from your backend\n      const result = await response.json();\n      if (result.success) {\n        const feeds = result.data;\n\n        // Mapping the ThingSpeak fields to the chart data\n        const temperatureData = feeds.map(feed => ({\n          x: new Date(feed.created_at),\n          y: parseFloat(feed.field1) // Assuming field1 is temperature\n        }));\n        const soilMoistureData = feeds.map(feed => ({\n          x: new Date(feed.created_at),\n          y: parseFloat(feed.field2) // Assuming field2 is soil moisture\n        }));\n        const humidityData = feeds.map(feed => ({\n          x: new Date(feed.created_at),\n          y: parseFloat(feed.field3) // Assuming field3 is humidity\n        }));\n        const motionDetectionData = feeds.map(feed => ({\n          x: new Date(feed.created_at),\n          y: parseFloat(feed.field4) // Assuming field4 is motion detection\n        }));\n\n        // Set the chart data state\n        setChartData({\n          datasets: [{\n            label: 'Temperature',\n            data: temperatureData,\n            borderColor: 'rgba(255, 99, 132, 1)',\n            backgroundColor: 'rgba(255, 99, 132, 0.2)',\n            borderWidth: 1\n          }, {\n            label: 'Soil Moisture',\n            data: soilMoistureData,\n            borderColor: 'rgba(54, 162, 235, 1)',\n            backgroundColor: 'rgba(54, 162, 235, 0.2)',\n            borderWidth: 1\n          }, {\n            label: 'Humidity',\n            data: humidityData,\n            borderColor: 'rgba(75, 192, 192, 1)',\n            backgroundColor: 'rgba(75, 192, 192, 0.2)',\n            borderWidth: 1\n          }, {\n            label: 'Motion Detection',\n            data: motionDetectionData,\n            borderColor: 'rgba(255, 159, 64, 1)',\n            backgroundColor: 'rgba(255, 159, 64, 0.2)',\n            borderWidth: 1,\n            yAxisID: 'y1'\n          }]\n        });\n      }\n    } catch (error) {\n      console.error('Error fetching chart data:', error);\n    }\n  };\n  useEffect(() => {\n    fetchChartData(); // Fetch chart data when the component mounts\n  }, []);\n  const options = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top'\n      },\n      tooltip: {\n        callbacks: {\n          label: function (context) {\n            let label = context.dataset.label || '';\n            if (label) {\n              label += ': ';\n            }\n            if (context.parsed.y !== null) {\n              label += context.parsed.y;\n            }\n            return label;\n          }\n        }\n      }\n    },\n    scales: {\n      x: {\n        type: 'time',\n        time: {\n          unit: 'hour',\n          // Show hourly data\n          tooltipFormat: 'MMM d, h:mm a'\n        },\n        title: {\n          display: true,\n          text: 'Time'\n        }\n      },\n      y: {\n        title: {\n          display: true,\n          text: 'Value'\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Line, {\n      options: options,\n      data: chartData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 5\n  }, this);\n};\n_s(FarmDataChart, \"w9TGTcQ41t1STf/TAA9S8/0Wwyc=\");\n_c = FarmDataChart;\nexport default FarmDataChart;\nvar _c;\n$RefreshReg$(_c, \"FarmDataChart\");","map":{"version":3,"names":["React","useEffect","useState","Line","Chart","ChartJS","LineElement","CategoryScale","LinearScale","TimeScale","Title","Tooltip","Legend","PointElement","jsxDEV","_jsxDEV","register","FarmDataChart","_s","chartData","setChartData","datasets","fetchChartData","response","fetch","result","json","success","feeds","data","temperatureData","map","feed","x","Date","created_at","y","parseFloat","field1","soilMoistureData","field2","humidityData","field3","motionDetectionData","field4","label","borderColor","backgroundColor","borderWidth","yAxisID","error","console","options","responsive","plugins","legend","position","tooltip","callbacks","context","dataset","parsed","scales","type","time","unit","tooltipFormat","title","display","text","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/pcompany/Desktop/Sem_VII/ET/AgriDost/frontend/src/components/FarmDataChart.js"],"sourcesContent":["// FarmDataChart.js\nimport React, { useEffect, useState } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, LineElement, CategoryScale, LinearScale, TimeScale, Title, Tooltip, Legend, PointElement } from 'chart.js';\nimport 'chartjs-adapter-date-fns'; // For handling time scales\n\nChartJS.register(LineElement, CategoryScale, LinearScale, TimeScale, Title, Tooltip, Legend, PointElement);\n\nconst FarmDataChart = () => {\n  const [chartData, setChartData] = useState({\n    datasets: []\n  });\n\n  // Function to fetch data from the backend API\n  const fetchChartData = async () => {\n    try {\n      const response = await fetch('/api/fetch-two-days-data'); // API endpoint from your backend\n      const result = await response.json();\n\n      if (result.success) {\n        const feeds = result.data;\n\n        // Mapping the ThingSpeak fields to the chart data\n        const temperatureData = feeds.map(feed => ({\n          x: new Date(feed.created_at),\n          y: parseFloat(feed.field1) // Assuming field1 is temperature\n        }));\n\n        const soilMoistureData = feeds.map(feed => ({\n          x: new Date(feed.created_at),\n          y: parseFloat(feed.field2) // Assuming field2 is soil moisture\n        }));\n\n        const humidityData = feeds.map(feed => ({\n          x: new Date(feed.created_at),\n          y: parseFloat(feed.field3) // Assuming field3 is humidity\n        }));\n\n        const motionDetectionData = feeds.map(feed => ({\n          x: new Date(feed.created_at),\n          y: parseFloat(feed.field4) // Assuming field4 is motion detection\n        }));\n\n        // Set the chart data state\n        setChartData({\n          datasets: [\n            {\n              label: 'Temperature',\n              data: temperatureData,\n              borderColor: 'rgba(255, 99, 132, 1)',\n              backgroundColor: 'rgba(255, 99, 132, 0.2)',\n              borderWidth: 1\n            },\n            {\n              label: 'Soil Moisture',\n              data: soilMoistureData,\n              borderColor: 'rgba(54, 162, 235, 1)',\n              backgroundColor: 'rgba(54, 162, 235, 0.2)',\n              borderWidth: 1\n            },\n            {\n              label: 'Humidity',\n              data: humidityData,\n              borderColor: 'rgba(75, 192, 192, 1)',\n              backgroundColor: 'rgba(75, 192, 192, 0.2)',\n              borderWidth: 1\n            },\n            {\n              label: 'Motion Detection',\n              data: motionDetectionData,\n              borderColor: 'rgba(255, 159, 64, 1)',\n              backgroundColor: 'rgba(255, 159, 64, 0.2)',\n              borderWidth: 1,\n              yAxisID: 'y1'\n            }\n          ]\n        });\n      }\n    } catch (error) {\n      console.error('Error fetching chart data:', error);\n    }\n  };\n\n  useEffect(() => {\n    fetchChartData(); // Fetch chart data when the component mounts\n  }, []);\n\n  const options = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top',\n      },\n      tooltip: {\n        callbacks: {\n          label: function (context) {\n            let label = context.dataset.label || '';\n            if (label) {\n              label += ': ';\n            }\n            if (context.parsed.y !== null) {\n              label += context.parsed.y;\n            }\n            return label;\n          }\n        }\n      }\n    },\n    scales: {\n      x: {\n        type: 'time',\n        time: {\n          unit: 'hour', // Show hourly data\n          tooltipFormat: 'MMM d, h:mm a',\n        },\n        title: {\n          display: true,\n          text: 'Time'\n        }\n      },\n      y: {\n        title: {\n          display: true,\n          text: 'Value'\n        }\n      }\n    }\n  };\n\n  return (\n    <div>\n      <Line\n        options={options}\n        data={chartData}\n      />\n    </div>\n  );\n};\n\nexport default FarmDataChart;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}